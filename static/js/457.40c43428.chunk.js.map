{"version":3,"file":"static/js/457.40c43428.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MoviesGallery/MoviesGallery.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/PageTitle/PageTitle.styled.jsx","components/PageTitle/PageTitle.jsx","components/Section/Section.jsx","components/Section/Section.styled.jsx","pages/Home/Home.jsx","hooks/useFetchTrending.jsx","services/movies-api.js","utilities/status.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h3`\n  font-size: 16px;\n  font-weight: bold;\n  line-height: 1.5;\n  text-align: center;\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n\n  color: inherit;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: #40f;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Title, MovieLink } from './MovieCard.styled';\n\nconst MovieCard = ({ title, movieId }) => {\n  const location = useLocation();\n  return (\n    <li>\n      <MovieLink to={`/movies/${movieId}`} state={{ from: location }}>\n        <article>\n          <Title>{title}</Title>\n        </article>\n      </MovieLink>\n    </li>\n  );\n};\n\nMovieCard.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  posterPath: PropTypes.string,\n};\n\nexport default MovieCard;\n","import PropTypes from 'prop-types';\nimport MovieCard from 'components/MovieCard';\nimport { Gallery } from '.';\n\nconst MoviesGallery = ({ movies }) => {\n  return (\n    <Gallery>\n      {movies.map(movie => (\n        <MovieCard key={movie.id} movieId={movie.id} title={movie.title} />\n      ))}\n    </Gallery>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesGallery;\n","import styled from '@emotion/styled';\n\nexport const Gallery = styled.ul``;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 50%;\n  min-height: calc(100vh / 4);\n  padding: 12px;\n`;\n\nexport const Message = styled.p`\n  color: #fff;\n  font-size: 2rem;\n  font-weight: bold;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Message } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return (\n    <Container>\n      <Message>{message}</Message>\n    </Container>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  padding: 12px;\n  padding-left: ${props => (props.noIndent ? '0' : '12px')};\n  font-size: 24px;\n  font-weight: bold;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './PageTitle.styled';\n\nconst PageTitle = ({ pageTitle, noIndent = false }) => {\n  return <Title noIndent={noIndent}>{pageTitle}</Title>;\n};\n\nPageTitle.propTypes = {\n  pageTitle: PropTypes.string.isRequired,\n  noIndent: PropTypes.bool,\n};\n\nexport default PageTitle;\n","import PropTypes from 'prop-types';\nimport { Container, Title } from '.';\n\nconst Section = ({ sectionTitle, children }) => {\n  return (\n    <Container>\n      {sectionTitle && <Title>{sectionTitle}</Title>}\n      {children}\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  sectionTitle: PropTypes.string,\n  children: PropTypes.element,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.section`\n  width: calc(100% - 24px);\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n\n  &.visuallyHidden {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    border: 0;\n    padding: 0;\n\n    white-space: nowrap;\n    clip-path: inset(100%);\n    clip: rect(0 0 0 0);\n    overflow: hidden;\n  }\n`;\n","import PageTitle from 'components/PageTitle';\nimport MoviesGallery from 'components/MoviesGallery';\nimport Section from 'components/Section';\nimport Notification from 'components/Notification';\nimport { STATUS } from 'utilities/status';\nimport { useFetchTrending } from 'hooks/useFetchTrending';\n\nconst Home = () => {\n  const { movies, status } = useFetchTrending();\n\n  return (\n    <>\n      <PageTitle pageTitle=\"Trending Today\" />\n      {status === STATUS.RESOLVED && (\n        <Section>\n          <MoviesGallery movies={movies} />\n        </Section>\n      )}\n      {status === STATUS.REJECTED && (\n        <Notification message=\"Ooops! Something went wrong :(... please reload the page.\" />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from 'react';\nimport * as moviesApi from '../services/movies-api';\nimport { STATUS } from 'utilities/status';\n\nexport const useFetchTrending = () => {\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING);\n    moviesApi\n      .fetchTrending()\n      .then(data => {\n        const movies = data.results;\n        setMovies(movies);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n        setStatus(STATUS.REJECTED);\n      });\n  }, []);\n\n  return { movies, status };\n};\n","const axios = require('axios');\nconst ACESS_KEY = 'f188c2fa569eae3a4b1ba6187aeb7327';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchData = async ({ path = '' }) => {\n  const response = await axios.get(path);\n  return response.data;\n};\n\nexport const fetchTrending = async () => {\n  return await fetchData({\n    path: `trending/movie/day?api_key=${ACESS_KEY}&include_adult=false`,\n  });\n};\n\nexport const fetchMoviesBySearch = async ({ query, page = 1 }) => {\n  return await fetchData({\n    path: `search/movie?api_key=${ACESS_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`,\n  });\n};\n\nexport const fetchMovieById = async ({ movieId }) => {\n  return await fetchData({\n    path: `movie/${movieId}?api_key=${ACESS_KEY}`,\n  });\n};\n\nexport const fetchMovieCredits = async ({ movieId }) => {\n  return await fetchData({\n    path: `movie/${movieId}/credits?api_key=${ACESS_KEY}&language=en-US`,\n  });\n};\n\nexport const fetchMovieReviews = async ({ movieId, page = 1 }) => {\n  return await fetchData({\n    path: `movie/${movieId}/reviews?api_key=${ACESS_KEY}&language=en-US&page=${page}`,\n  });\n};\n","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n"],"names":["Title","styled","MovieLink","Link","title","movieId","location","useLocation","to","state","from","movies","Gallery","map","movie","id","Container","Message","message","props","noIndent","pageTitle","sectionTitle","children","useState","STATUS","status","setStatus","setMovies","useEffect","moviesApi","then","data","results","catch","console","log","useFetchTrending","PageTitle","Section","MoviesGallery","Notification","axios","require","ACESS_KEY","defaults","baseURL","fetchData","path","get","response","fetchTrending","fetchMoviesBySearch","query","page","fetchMovieById","fetchMovieCredits","fetchMovieReviews","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}